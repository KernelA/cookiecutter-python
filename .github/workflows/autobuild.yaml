name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  workflow_dispatch:

jobs:
  test-template:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        remove_test_script: ['yes', 'no']
        remove_dockerfile: ['yes', 'no']
    env:
        DEFAULT_TEMPLATE_DIR: test

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            ./{{cookiecutter.project_name}}/requirements.dev.txt
            ./{{cookiecutter.project_name}}/requirements.txt
            ./requirements.txt

      - name: Install cookiecutter 
        run: pip install -r ./requirements.txt

      - name: Render template
        env:
          COOKIECUTTER_CONTEXT_PROJECT_NAME: ${{ env.DEFAULT_TEMPLATE_DIR }}
          COOKIECUTTER_CONTEXT_REMOVE_TEST_SCRIPT: ${{ matrix.remove_test_script }}
        run: |
          python ./gen_with_context.py --out_dir .

      - name: Check if test file does not exist
        if: ${{ matrix.remove_test_script == 'yes' }}
        working-directory: ./${{ env.DEFAULT_TEMPLATE_DIR }}
        run: |
          FILE=./tests

          if [ -f "${FILE}" ]
          then
            echo "Found file ${FILE} but it must be deleted"
            exit 1
          fi
        
      - name: Check if Dockerfile does not exist
        if: ${{ matrix.remove_dockerfile == 'yes' }}
        run: |
          FILE=./Dockerfile
          if [ -f "${FILE}" ]
          then
            echo "Found file ${FILE} but it must be deleted"
            exit 1
          fi
    
      - name: Install dependecies
        working-directory: ./${{ env.DEFAULT_TEMPLATE_DIR }}
        run: pip install -r ./requirements.txt -r ./requirements.dev.txt
    
      - name: Test logging
        working-directory: ./${{ env.DEFAULT_TEMPLATE_DIR }}
        if: ${{ matrix.remove_test_script == 'no' }}
        run: pytest ./tests

      - name: Lint with pylinter
        working-directory: ./${{ env.DEFAULT_TEMPLATE_DIR }}
        run: pylint --exit-zero ./*.py

      - name: Test setup
        if: ${{ matrix.as_package == 'yes' }}
        working-directory: ./${{ env.DEFAULT_TEMPLATE_DIR }}
        run: pip install .

